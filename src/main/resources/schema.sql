create TABLE IF NOT EXISTS mpa_rates (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar
);

create TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL,
  description varchar(200),
  release_date date,
  duration integer,
  mpa_rate_id integer REFERENCES mpa_rates(id) ON update CASCADE ON delete CASCADE
);

create TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar NOT NULL,
  login varchar NOT NULL,
  name varchar,
  birthday date
);

create TABLE IF NOT EXISTS likes (
  film_id integer REFERENCES films (id) ON update CASCADE ON delete CASCADE,
  user_id integer REFERENCES users (id) ON update CASCADE ON delete CASCADE,
  PRIMARY KEY (film_id, user_id)
);

create TABLE IF NOT EXISTS genres (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar
);

create TABLE IF NOT EXISTS film_genres (
  film_id integer REFERENCES films (id) ON update CASCADE ON delete CASCADE,
  genre_id integer REFERENCES genres (id) ON update CASCADE ON delete CASCADE,
  PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS friends (
  user_id integer REFERENCES users (id) ON update CASCADE ON delete CASCADE,
  friend_id integer REFERENCES users (id) ON update CASCADE ON delete CASCADE,
  isAccepted boolean,
  PRIMARY KEY (user_id, friend_id)
);
